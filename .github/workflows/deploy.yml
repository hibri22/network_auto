name: Deploy to Azure VM and Install Docker

on:
  push:
    branches:
      - main  # Trigger the pipeline on push to the main branch
  pull_request:
    branches:
      - main  # Trigger on PR to main branch

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.4.6'

      - name: Set up SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

  configure-vm:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up SSH keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Run Ansible Playbook to Install Docker
        run: |
          ansible-playbook -i inventory.ini install_docker.yml

  docker-deploy:
    runs-on: ubuntu-latest
    needs: configure-vm
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: |
          docker build -t my-web-app .

      - name: Push Docker image to DockerHub
        run: |
          docker push my-web-app

      - name: Deploy Docker container to VM
        run: |
          sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_PUBLIC_IP }} "docker pull my-web-app && docker run -d -p 80:80 --name web-app my-web-app"
