trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

jobs:
- job: Setup
  displayName: "Setup Environment"
  steps:
    - checkout: self

    - task: Bash@3
      displayName: "Install Terraform"
      inputs:
        targetType: "inline"
        script: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget https://releases.hashicorp.com/terraform/1.4.6/terraform_1.4.6_linux_amd64.zip
          unzip terraform_1.4.6_linux_amd64.zip
          sudo mv terraform /usr/local/bin/

    - task: Bash@3
      displayName: "Install Ansible & Dependencies"
      inputs:
        targetType: "inline"
        script: |
          sudo apt update
          sudo apt install -y ansible sshpass

- job: Terraform
  displayName: "Run Terraform"
  dependsOn: Setup
  steps:
    - checkout: self

    - script: |
        terraform init
        terraform apply -auto-approve
      displayName: "Terraform Apply"

- job: ConfigureVM
  displayName: "Configure Azure VM with Ansible"
  dependsOn: Terraform
  steps:
    - checkout: self

    - task: Bash@3
      displayName: "Setup SSH Keys"
      inputs:
        targetType: "inline"
        script: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

    - script: |
        ansible-playbook -i inventory.ini install_docker.yml
      displayName: "Run Ansible Playbook to Install Docker"

- job: BuildAndPushDocker
  displayName: "Build and Push Docker Image"
  dependsOn: ConfigureVM
  steps:
    - checkout: self

    - script: |
        sudo apt update
        sudo apt install -y docker.io
      displayName: "Install Docker"

    - task: Docker@2
      displayName: "Build and Push Docker Image"
      inputs:
        containerRegistry: "$(dockerRegistryServiceConnection)"
        repository: "my-web-app"
        command: "buildAndPush"
        Dockerfile: "./Dockerfile"
        tags: |
          $(Build.BuildId)

- job: Deploy
  displayName: "Deploy Docker Container on Azure VM"
  dependsOn: BuildAndPushDocker
  steps:
    - checkout: self

    - script: |
        sshpass -p "${{ secrets.AZURE_VM_PASSWORD }}" ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_PUBLIC_IP }} "
        docker pull $(dockerRegistryServiceConnection)/my-web-app:$(Build.BuildId) &&
        docker run -d -p 80:80 --name web-app $(dockerRegistryServiceConnection)/my-web-app:$(Build.BuildId)"
      displayName: "Deploy Docker Container on VM"


        # Navigate to project directory
        cd /home/${{ secrets.AZURE_VM_USERNAME }}/app/

        # Build and run the Docker container
        docker build -t my-web-app:latest .
        docker run -d -p 80:80 --name web-app my-web-app:latest
        EOF


